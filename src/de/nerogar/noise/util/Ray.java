package de.nerogar.noise.util;

public class Ray {

	private Vector3f start;
	private Vector3f dir;

	public Ray(Vector3f start, Vector3f dir) {
		this.start = start;
		this.dir = dir;
	}

	public Vector3f getStart()           { return start; }

	public void setStart(Vector3f start) { this.start = start; }

	public Vector3f getDir()             { return dir; }

	public void setDir(Vector3f dir)     { this.dir = dir; }

	@Override
	public String toString() {
		return "Ray{" + "start: " + start + ", dir: " + dir + '}';
	}

	@Override
	public boolean equals(Object o) {
		// generated by IntelliJ IDEA
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;

		Ray ray = (Ray) o;

		if (start != null ? !start.equals(ray.start) : ray.start != null) return false;
		return dir != null ? dir.equals(ray.dir) : ray.dir == null;
	}

	@Override
	public int hashCode() {
		// generated by IntelliJ IDEA
		int result = start != null ? start.hashCode() : 0;
		result = 31 * result + (dir != null ? dir.hashCode() : 0);
		return result;
	}
}
